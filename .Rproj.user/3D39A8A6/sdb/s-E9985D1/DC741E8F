{
    "collab_server" : "",
    "contents" : "#----------------- S:H RATIOS in Ofav Control vs NH4\n\ngetwd()\n\n# All libraries and sources\n    source(\"STEPoneFunction.R\")# R.Cunning steponeR function\n    library(plyr)\n    library(reshape2)\n    library(ggplot2)\n\n\n\n##----------------------------------------------------------##\n# 1. qPCR RATIOS \n##----------------------------------------------------------##\n\n# +++++++++\n# Libraries                           \n# source(\"STEPoneFunction.R\")\n# +++++++++\n\n# # # Get the raw data for Ofav R.Cunning steponeR function----------\n\n\n# Get list of plate files to read in\n  Ofav.plates <- list.files(path=\"data\", pattern=\"csv\", full.names=T)\n  Ofav.plates\n\n\n# # # Run stepone function to get Ratios\nOfav.Out <- steponeR(files=Ofav.plates, target.ratios=c(\"A.Ofav\", \"B.Ofav\",\"C.Ofav\", \"D.Ofav\"), \n                     fluor.norm=list(A=-0.064, B=4.197, C=3.798, D=0, Ofav=7.416),\n                     copy.number=list(A=1, B=1,C=50, D=3, Ofav=14),\n                     ploidy=list(A=1, B=1, C=1, D=1, Ofav=2),\n                     extract=list(A=0.813, B=0.813, C=0.813, D=0.813, Ofav=0.982))\n\n# Target ratio results\nOfav<-Ofav.Out$result\n\n##----------------------------------------------------------##\n# DATA CLEANING part A\n\n## 1. Check and remove NTC wells\nntc <- Ofav[which(Ofav$Sample.Name==\"NTC\"), ]\nif(any(!is.na(ntc$CT))) warning (\"Template detected in NTC: interpret data with caution\")\nOfav <- droplevels(Ofav[!rownames(Ofav) %in% rownames(ntc), ])\n\n## 2. Check and remove + Control wells\nPositive <- Ofav[which(Ofav$Sample.Name==\"Control\"), ]\nOfav <- droplevels(Ofav[!rownames(Ofav) %in% rownames(Positive), ])\n\n##----------------------------------------------------------##\n\n# Calculate total S/H ratio, clade spacific ratios and Clade Proportions\n\n# 1. If Clade only detected in one technical replicate, set its ratio to NA (becomes zero)\n    Ofav$A.Ofav[which(Ofav$A.reps==1)] <- NA\n    Ofav$B.Ofav[which(Ofav$B.reps==1)] <- NA\n    Ofav$C.Ofav[which(Ofav$C.reps==1)] <- NA\n    Ofav$D.Ofav[which(Ofav$D.reps==1)] <- NA\n\n# 2. Rename cols and make NA=0\n    colnames(Ofav)[which(colnames(Ofav) %in% c(\"A.Ofav\", \"B.Ofav\",\"C.Ofav\", \"D.Ofav\" ))] <- c(\"A.SH\", \"B.SH\",\"C.SH\", \"D.SH\")  \n\n    Ofav$A.SH[is.na(Ofav$A.SH)] <- 0\n    Ofav$B.SH[is.na(Ofav$B.SH)] <- 0\n    Ofav$C.SH[is.na(Ofav$C.SH)] <- 0\n    Ofav$D.SH[is.na(Ofav$D.SH)] <- 0\n\n# 3. Get the ratios and log 10\n    # Total ratio\n    Ofav$tot.SH <- Ofav$A.SH + Ofav$B.SH + Ofav$C.SH + Ofav$D.SH    \n    Ofav$logTot.SH <- log10(Ofav$tot.SH )  # Calculate log10 SH ratio\n    \n    # A LOG10 ratio\n    Ofav$logA.SH <- log10(Ofav$A.SH)\n    # B LOG10 ratio\n    Ofav$logB.SH <- log10(Ofav$B.SH)\n    # C LOG10 ratio\n    Ofav$logC.SH <- log10(Ofav$C.SH)\n    # D LOG10 ratio\n    Ofav$logD.SH <- log10(Ofav$D.SH)  \n  \n\n# 4. Clade Proportion\n      # D Proportion\n      Ofav$D.Prp<-(Ofav$D.SH/Ofav$tot.SH)\n      hist(Ofav$D.Prp)\n\n      Ofav$logTot.SH[which(Ofav$tot.SH==0)] <- NA\n      Ofav$logA.SH[which(Ofav$A.SH==0)] <- NA\n      Ofav$logB.SH[which(Ofav$B.SH==0)] <- NA\n      Ofav$logC.SH[which(Ofav$C.SH==0)] <- NA\n      Ofav$logD.SH[which(Ofav$D.SH==0)] <- NA\n\n\n##----------------------------------------------------------##\n# DATA CLEANING part B\n\n## 3. Check and remove NoHSratio samples\n    NoHSratio <- Ofav[which(Ofav$tot.SH==0), ]\n    Ofav <- droplevels(Ofav[!rownames(Ofav) %in% rownames(NoHSratio), ])\n    \n    \n## 4. Chose bw samples ran more than once\n    \n  # Create a unique ID for each sample.run\n    \n    Ofav$ID<-paste(Ofav$Sample.Name,Ofav$File.Name, sep = \".\")\n    \n  # Check the number of times that a sigle sample was ran  \n    ReRunA <- Ofav[duplicated(Ofav$Sample.Name),]\n    \n    n_RunA <- data.frame(table(Ofav$Sample.Name))\n    colnames(n_RunA)<-c(\"Sample.Name\",\"RanA\")\n    Ofav<-join(Ofav, n_RunA, type = \"left\")\n    \n    DuplicatesA <- Ofav[(Ofav$RanA>1),]\n    write.csv(DuplicatesA, file = 'DuplicatesA.csv')\n    # Look and the duplicates and manueally select best runs. \n    # Save the ones you are removing as ToRem1.csv\n    \n  # Remove bad replicates\n    ToRem1<-read.csv(\"ToRem1.csv\") \n    # 09/01/16\n    Ofav<-Ofav[!(Ofav$ID %in% ToRem1$ID),]\n    \n  # Check for replicates again--should have none\n    \n    n_RunB <- data.frame(table(Ofav$Sample.Name))\n    ReRunB <- Ofav[duplicated(Ofav$Sample.Name),]\n    colnames(n_RunB)<-c(\"Sample.Name\",\"RanB\")\n    Ofav<-join(Ofav, n_RunB, type = \"left\")\n    \n    \n  # List of dupplicated samples, should have 0 rows now\n    DuplicatesB <- Ofav[(Ofav$RanB>1),]\n    # write.csv(DuplicatesC, file = 'DuplicatesC.csv')\n    \n  # Check the data!\n    summary(Ofav)\n    \n  # Export data if want local backup\n  # write.csv(Ofav, file = 'OfavSH.csv')\n    \n    \n#----------------------------------------------------------#\n# DATA ANALYSIS\n#----------------------------------------------------------#\n    \n  # 1.Labeling and Factors\n    \n    ## Import treatment info from last Lauren's file \n    Treatments<-read.csv(\"TGFB-Final_AP.csv\", header = TRUE)\n    \n    ## Merge SH ratios and Treatments \n    \n    Ofav.data<-join(Ofav, Treatments, by = \"Sample.Name\", \n                    type = \"full\", match = \"all\")\n    \n  # 2. Exploratory graphs \n\n    # Libraries   \n    # library(ggplot2)\n    # +++++++++\n    \n    HistoSH<-qplot(logTot.SH, data=Ofav.data, binwidth=0.15)  \n    \n    HistoSH + \n      facet_wrap(Treatment~Treatment.2) + \n      geom_density()\n    \n    hist_Tre <- ggplot(Ofav.data, aes(x=logTot.SH, fill=Treatment))\n    \n    hist_Tre + \n      geom_density(alpha = 0.2) + facet_grid(Treatment.2~.)\n    \n    # Ggplot shows by default median instead mean vlues\n    logSHTreatment <- ggplot(Ofav.data, aes(factor(Treatment), logTot.SH)) + \n    logSHTreatment +\n      geom_boxplot(aes(fill=factor(Treatment))) + \n      geom_jitter(width = 0.2) +\n      facet_grid ((~Treatment.2))\n    \n    # Plot mean +- SD\n    \n    # Create a function\n        min.mean.sd.max <- function(x) {\n          r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))\n          names(r) <- c(\"ymin\", \"lower\", \"middle\", \"upper\", \"ymax\")\n          r\n        }\n        \n    # ggplot code using mean and SD\n      PlotMeanAndSD <- ggplot(aes(y = logTot.SH, x = factor(Treatment)), data = Ofav.data) +\n                  facet_grid ((~Treatment.2))\n      \n      PlotMeanAndSD <- PlotMeanAndSD + \n         stat_summary(fun.data = min.mean.sd.max, geom = \"boxplot\") +\n         geom_jitter(position=position_jitter(width=.2), size=2) + \n         xlab(\"Treatments\") + ylab(\"Log10(SH cell ratio)\")\n  \n  # 3. ANOVAS\n    \n    # Effectof nutrients alone:\n      \n    OnwWayANOVA<-aov(logTot.SH~Treatment, data=Ofav.data)\n        summary(OnwWayANOVA)\n\n    # Effects of nutrients * treatment # 2\n    \n    TwoWayANOVA<-aov(logTot.SH ~ Treatment*Treatment.2 , data=Ofav.data)\n        summary(TwoWayANOVA)\n        drop1(TwoWayANOVA,~.,test=\"F\")\n\n    ",
    "created" : 1475337970601.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1406449363",
    "id" : "DC741E8F",
    "lastKnownWriteTime" : 1475367056,
    "last_content_update" : 1475367056681,
    "path" : "~/Dropbox/RSMAS/Projects/2016-LaurenOfav/Ofav-Ratios-R/Ofav-SH-NH4.R",
    "project_path" : "Ofav-SH-NH4.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}